#+title: README

* Smart-input-server
A simple server application to translate input from a smartphone onto a computer.\\
The concept is simply to use smartphone as an input device for pointer (mouse) and keys (keyboard).

/The server part is done in Clojure because i want to practice with it for a while./

Could be configured per application and shortcut buttons could be created.\\
That is a basic idea for now...

** Keyboard layouts support:

I am currently working with a JIS layout keyboard (japanese layout) and will support it first.

But I plan to next support ANSI and ISO us layouts.\\
PRs are welcome if you want to provide layout support.

Please have a look at file:src/smart_input/keyboard_layout.clj for implementation details.

* Usage
Sample and some usage details.

** Protocol
All signals are transmitted by UDP.

The format is like so:

| signal name     | parameters | sample              | explanation                                      | Status |
|-----------------+------------+---------------------+--------------------------------------------------+--------|
| MOUSE_MOVE      | X+n,Y+m    | MOUSE_MOVE:X+10,Y-5 | moves the mouse 10px on X axis, and -5 on Y axis | DONE   |
| MOUSE_CLICK (1) | 1          | MOUSE_CLICK:1       | press the mouse button 1 (left) then release it  | DONE   |
| KEY_PRESS (2)   | <a>        | KEY_PRESS:a         | press the key "a" on the keyboard and release it | DONE   |

*(1)* For now, only /mouse1/ is handeled.

*(2)*\\
~KEY_PRESS~ can receive modifiers as well like:
- C-c :: means <ctrl> + <c>
- A-d :: means <alt> + <d>
- S-u :: means <shift> + <u>
- C-A-S-s :: means <ctrl> + <alt> + <shift> + <s>

Also, sequence of keys or chords can be sent:
- a b c :: means <a> <b> <c>
- a b C-a :: means <a> <b> <ctrl>+<a>

Can be used for macros in games, complex shortcuts etc...

*NOTE*\\
Please do not use for passwords, because the UDP connexion is not secured.

*** Special keys

| Code                          | Key meaning | Status |
|-------------------------------+-------------+--------|
| <tab>                         | Tab         | DONE   |
| <cr>                          | Enter       | DONE   |
| <bs>                          | Backspace   | DONE   |
| <esc>                         | Escape      | DONE   |
| <ins>                         | Insert      | DONE   |
| <del>                         | Delete      | DONE   |
| <home>                        | Home        | DONE   |
| <end>                         | End         | DONE   |
| <pgup>                        | Page Up     | DONE   |
| <pgdown>                      | Page Down   | DONE   |
| <f1> ~ <f12>                  | F1~F12 keys | DONE   |
| <space>                       | SPACE       | DONE   |
| <up>, <right>, <down>, <left> | arrow keys  | DONE   |
|-------------------------------+-------------+--------|
| *Punctuation*                 |             |        |
|-------------------------------+-------------+--------|
| <exclamation>                 | !           | TODO   |
| <question>                    | ?           | TODO   |
| <period>                      | .           | TODO   |
| <comma>                       | ,           | TODO   |
| <colon>                       | :           | TODO   |
| <semicolon>                   | ;           | TODO   |
| <dquote>                      | "           | TODO   |
| <squote>                      | '           | TODO   |
| <backtick>                    | `           | TODO   |
| <paren_o>                     | (           | TODO   |
| <paren_c>                     | )           | TODO   |
| <bracket_o>                   | [           | TODO   |
| <bracket_c>                   | ]           | TODO   |
| <brace_o>                     | {           | TODO   |
| <brace_c>                     | }           | TODO   |
| <angle_o>                     | <           | TODO   |
| <angle_c>                     | >           | TODO   |
| <plus>                        | +           | TODO   |
| <minus>                       | -           | TODO   |
| <asterisk>                    | *           | TODO   |
| <equal>                       | =           | TODO   |
| <slash>                       | /           | TODO   |
| <backslash>                   | \           | TODO   |
| <caret>                       | ^           | TODO   |
| <tilde>                       | ~           | TODO   |
| <pipe>                        | \vert       | TODO   |
| <underscore>                  | _           | TODO   |
| <sharp>                       | #           | TODO   |
| <at>                          | @           | TODO   |
| <dollar>                      | $           | TODO   |
| <percent>                     | %           | TODO   |
| <and>                         | &           | TODO   |

* WIP Roadmap [0/5]
Almost in priority order.
** TODO Characters/Keys support
See list of characters/keys above.
** TODO Server IP display at server startup
During server startup, display of the server IP.
That will help setting up the controller device connexion.

Should handle multiple interfaces.
Example: case with multiple network cards (lan + wifi)
** TODO Scrolling
Add scroll support (2 fingers swipe on the controller device)
** TODO Gestures
Appart from scrolling, support 3 fingers gestures shortcuts
** TODO Layouts Support
Currently only JIS layout is supported.
Add US ANSI, US ISO and some more common layouts.

* What's next
For now, Windows plateform is supported for the server.

The client (smart-phone app) will start with Android.\\
It'll be another repository, I'll add a link when I have some commits to share.

* License
Copyright Â© 2017 Cedric Simon

GNU License v3
